recuperation mo curve trader via excel
data = pd.read_csv(r"W:\UK\Trading_Public\FrontOffice\Trading Marks\Power\ExportforMiddle 12-08-22.csv", decimal="." , thousands=',' ,  index_col = False)
data.dropna(inplace = True)
data
data_fr  = data.loc[: , ["Maturity", "ELEC_FR.B"]]
data_fr.set_index(data["Maturity"], inplace = True)
data_fr.drop(["Maturity"], axis = 1,  inplace =  True)
data_fr['ELEC_FR.B'] = pd.to_numeric(data_fr['ELEC_FR.B'])
data_fr

creation marge d'acceptation
data_fr_quarters = data_fr[data_fr.index.str.contains("Q")]
data_fr_quarters["+ std"] = data_fr_quarters["ELEC_FR.B"] + 20
data_fr_quarters["- std"] = data_fr_quarters["ELEC_FR.B"] - 20

plot
plt.figure(figsize=(30, 10))
plt.xlabel('Maturity')
plt.ylabel('Prices')
data_fr_quarters["- std"].plot()
data_fr_quarters["ELEC_FR.B"].plot()
data_fr_quarters["+ std"].plot()
plt.fill_between(data_fr_quarters.index, data_fr_quarters["+ std"], data_fr_quarters["- std"], alpha = 0.1, color = 'g')


from qpython import qconnection 
import pandas as pd 
import numpy as np 
from datetime import datetime

kdb_date = "2022-01-19"
kdb_date = kdb_date.replace('-','.')
print(kdb_date)


## Open a connection to kdb 
q = qconnection.QConnection(host = 'kdb.dts.corp.local',port=8004,username='Administrator',password='password', pandas=True)

## Retreives data from KDB
q.open()
kdb_trades=q.sendSync('.engie.getAssessmentsPrices('+kdb_date+')')
q.close() 

## kdb symbols/strings returned as python byte strings -- convert these to regular strings 
bstr_cols = kdb_trades.select_dtypes([object]).columns
for i in bstr_cols:
    kdb_trades[i]=kdb_trades[i].apply(lambda x: x.decode('latin'))
    
Alteryx.write(kdb_trades,1)#le num depend du nb de l'output, ici 1

pd.merge(Markit, Markit_1, left_index=True, right_index=True, how = 'left')


ma_series_forward_hourly = ma_serie_forward \
.to_period("D") \
.to_timestamp(how="end") \
.resample("H") \
.bfill() 